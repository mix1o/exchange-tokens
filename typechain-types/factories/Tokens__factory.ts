/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Tokens, TokensInterface } from "../Tokens";

const _abi = [
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405260056080819052642a37b5b2b760d91b60a0908152610026916000919061006b565b5060408051808201909152600580825264045524332360dc1b60209092019182526100539160019161006b565b50601260025534801561006557600080fd5b506100fe565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106100ac57805160ff19168380011785556100d9565b828001600101855582156100d9579182015b828111156100d95782518255916020019190600101906100be565b506100e59291506100e9565b5090565b5b808211156100e557600081556001016100ea565b6102098061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806306fdde0314610046578063313ce567146100c357806395d89b41146100dd575b600080fd5b61004e6100e5565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610088578181015183820152602001610070565b50505050905090810190601f1680156100b55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6100cb610173565b60408051918252519081900360200190f35b61004e610179565b6000805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561016b5780601f106101405761010080835404028352916020019161016b565b820191906000526020600020905b81548152906001019060200180831161014e57829003601f168201915b505050505081565b60025481565b60018054604080516020600284861615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561016b5780601f106101405761010080835404028352916020019161016b56fea2646970667358221220a642e6903fe93e5f6fe54776d69cab4f538e7124a51b20457d234c864a763f2a64736f6c63430007030033";

type TokensConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokensConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Tokens__factory extends ContractFactory {
  constructor(...args: TokensConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Tokens> {
    return super.deploy(overrides || {}) as Promise<Tokens>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Tokens {
    return super.attach(address) as Tokens;
  }
  connect(signer: Signer): Tokens__factory {
    return super.connect(signer) as Tokens__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokensInterface {
    return new utils.Interface(_abi) as TokensInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Tokens {
    return new Contract(address, _abi, signerOrProvider) as Tokens;
  }
}
