/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MyToken, MyTokenInterface } from "../MyToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c0604052600760808190526626bcaa37b5b2b760c91b60a0908152610028916000919061007d565b50604080518082019091526003808252624d544b60e81b60209092019182526100539160019161007d565b50601260025534801561006557600080fd5b50600380546001600160a01b03191633179055610151565b82805461008990610116565b90600052602060002090601f0160209004810192826100ab57600085556100f1565b82601f106100c457805160ff19168380011785556100f1565b828001600101855582156100f1579182015b828111156100f15782518255916020019190600101906100d6565b506100fd929150610101565b5090565b5b808211156100fd5760008155600101610102565b60028104600182168061012a57607f821691505b6020821081141561014b57634e487b7160e01b600052602260045260246000fd5b50919050565b610321806101606000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c806340c10f191161005057806340c10f191461009f5780638da5cb5b146100b457806395d89b41146100c957610067565b806306fdde031461006c578063313ce5671461008a575b600080fd5b6100746100d1565b6040516100819190610230565b60405180910390f35b61009261015f565b6040516100819190610283565b6100b26100ad3660046101cc565b610165565b005b6100bc6101a3565b604051610081919061020f565b6100746101bf565b600080546100de906102b0565b80601f016020809104026020016040519081016040528092919081815260200182805461010a906102b0565b80156101575780601f1061012c57610100808354040283529160200191610157565b820191906000526020600020905b81548152906001019060200180831161013a57829003601f168201915b505050505081565b60025481565b73ffffffffffffffffffffffffffffffffffffffff82166000908152600460205260408120805483929061019a90849061028c565b90915550505050565b60035473ffffffffffffffffffffffffffffffffffffffff1681565b600180546100de906102b0565b600080604083850312156101de578182fd5b823573ffffffffffffffffffffffffffffffffffffffff81168114610201578283fd5b946020939093013593505050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b6000602080835283518082850152825b8181101561025c57858101830151858201604001528201610240565b8181111561026d5783604083870101525b50601f01601f1916929092016040019392505050565b90815260200190565b600082198211156102ab57634e487b7160e01b81526011600452602481fd5b500190565b6002810460018216806102c457607f821691505b602082108114156102e557634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220759f5500adb6e2e7e47754d67341a3ec9da05e0de9aab7d66c0f7c622ab6594364736f6c63430008010033";

type MyTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MyTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MyToken__factory extends ContractFactory {
  constructor(...args: MyTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MyToken> {
    return super.deploy(overrides || {}) as Promise<MyToken>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MyToken {
    return super.attach(address) as MyToken;
  }
  connect(signer: Signer): MyToken__factory {
    return super.connect(signer) as MyToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyTokenInterface {
    return new utils.Interface(_abi) as MyTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MyToken {
    return new Contract(address, _abi, signerOrProvider) as MyToken;
  }
}
